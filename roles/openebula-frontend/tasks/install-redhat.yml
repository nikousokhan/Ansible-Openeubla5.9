---
- name: Step 1. Add multiple repositories into the same file (1/2)
  yum_repository:
    file: opennebula
    name: opennebula
    description: package-install
    baseurl:  https://downloads.opennebula.org/repo/{{ opennebula_version }}/CentOS/7/x86_64
    enabled: yes
    gpgkey: https://downloads.opennebula.org/repo/repo.key
    gpgcheck: yes

- name: Step 2. yum-clean-metadata
  command: yum clean metadata
  args:
    warn: no

- name: Step 3. Installing the Software
  yum:
    name:
      - opennebula
      - opennebula-server
      - opennebula-sunstone
      - opennebula-gate
      - opennebula-flow
    state: present
#-------------------------------------------------------------------------------------------------------------------------------------    
- name: Step 4. Install expect for unattended running of /usr/share/one/install_gems
  yum:
    name:  expect
    state: present

- name: Step 5. Obtain the status of /root/install_gems
  stat:
    path: /root/install_gems
  register: root_install_gems

- name: Step 6. Create expect file for unattended running of /usr/share/one/install_gems on RHEL
  blockinfile:
    path:   /root/install_gems
    block:  |
      #!/usr/bin/expect --
      spawn /bin/ruby /usr/share/one/install_gems
      expect "1. CentOS/RedHat/Scientific"
      send "1\r"
      expect "Press enter to continue..."
      send "\r"
      expect "Is this ok \\\[y/d/N\\\]:"
      send "y\r"
      expect "Press enter to continue..."
      send "\r"
      set timeout -1
      expect "Abort."
      puts "Ended expect script."
    create: yes
    state:  present
    marker: "# {mark} CREATED BY ANSIBLE"
  when: root_install_gems.stat.exists == False
  become_user: root

- name: Step 7. Ruby Runtime Installation
  shell:  expect /root/install_gems&& touch /root/install_gems.done
  args:
    creates: /root/install_gems.done
#-------------------------------------------------------------------------------------------------------------------------------------

- name: Step 9. copy oned.conf
  template: src=oned.conf.j2 dest=/etc/one/oned.conf
  tags:
    - config


#- name: install sunstone configruation
#  template: src=sunstone-server.conf.j2 dest=/etc/one/sunstone-server.conf

      
#-------------------------------------------------------------------------------------------------------------------------------------
- name: Step 8. Change oneadmin password
  shell: "echo 'oneadmin:{{ oneadmin_password }}' > /var/lib/one/.one/one_auth&& touch /var/lib/one/.one/one_auth.done"
  args:
    creates: /var/lib/one/.one/one_auth.done
  become_user: oneadmin

## generate public/private keys, this should be shared across the ONE frontend and nodes in the oneadmin account
#- name: Generate_keys for oneadmin
#  user: name=oneadmin generate_ssh_key=yes

- name: Fetch generated public key from frontend oneadmin account
  fetch: src={{item}} dest=private/ flat=yes
  with_items:
    - /var/lib/one/.ssh/id_rsa.pub
    - /var/lib/one/.ssh/id_rsa
    - /var/lib/one/.one/one_auth

- name: Install insecure config for oneadmin
  action: copy src=files/insecure_config dest=/var/lib/one/.ssh/config owner=oneadmin group=oneadmin  mode=0600

- name: Change file ownership, group and permissions
  file:
    path: /var/lib/one/
    recurse: yes
    owner: oneadmin
    group: oneadmin
  
#------------------------------------------------------------------------------------------------------------------------------------

- name: Make sure a service is running
  systemd:
    state: started
    name: opennebula
    enabled: yes
  ignore_errors: yes

- name: Make sure a service is running
  systemd:
    state: started
    name: opennebula-sunstone
    enabled: yes
  ignore_errors: yes

- name: Step 11. Wait for opennebula sunstone to start
  wait_for:
    port:    9869
    delay:   3
    timeout: 5
  
- name: Make sure a service is running
  systemd:
    state: started
    name: opennebula-flow
    enabled: yes
  ignore_errors: yes

- name: Make sure a service is running
  systemd:
    state: started
    name: opennebula-gate
    enabled: yes
  ignore_errors: yes

- name: Make sure a service is running
  systemd:
    state: started
    name: opennebula-scheduler
    enabled: yes
  ignore_errors: yes  
